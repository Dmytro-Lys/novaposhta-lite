{"version":3,"file":"static/js/112.5faa71bd.chunk.js","mappings":"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","sources":["../node_modules/@mui/system/esm/styled.js","../node_modules/@mui/system/esm/Container/createContainer.js","../node_modules/@mui/material/Container/Container.js","redux/query/selectors.js","API/helpers.js","pages/Incomings.jsx"],"sourcesContent":["import createStyled from './createStyled';\nconst styled = createStyled();\nexport default styled;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize, unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => _extends({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => _extends({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth &&\n  // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n        className,\n        component = 'div',\n        disableGutters = false,\n        fixed = false,\n        maxWidth = 'lg'\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = _extends({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    });\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, _extends({\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","export const getLimit = state => state.query.limit\nexport const getPage = state => state.query.page","\nexport const formatDate = (dateString, withTime = true) => {\n    if (dateString.length === 0) return ''\n    const date = new Date(dateString)\n    if (date.getTime === 0) return ''\n    const day = String(date.getDate()).padStart(2, '0')\n    const month = String(date.getMonth() + 1).padStart(2, '0')\n    const year = String(date.getFullYear())\n    const formattedDate = `${day}.${month}.${year}`\n    if (withTime) {\n      const hours = String(date.getHours()).padStart(2, '0')\n      const minutes = String(date.getMinutes()).padStart(2, '0')\n      const seconds = String(date.getSeconds()).padStart(2, '0')  \n      return `${formattedDate} ${hours}:${minutes}:${seconds}`   \n    }\n    return formattedDate\n}\n\nexport const getDateFrom = () => {\n  const date = new Date()\n  date.setMonth(date.getMonth() - 3)\n  date.setHours(0, 0, 0, 0)\n  return formatDate(date.toString())\n}\n\nexport const getDateTo = () => {\n  const date = new Date()\n  date.setMonth(date.getMonth() + 1)\n  date.setHours(0, 0, 0, 0)\n  return formatDate(date.toString())\n}","import Container from '@mui/material/Container';\n// import { useGetIncomingDocumentsQuery } from 'API/novaposhtaApi';\nimport {  useSelector } from 'react-redux';\nimport { getSelectApiKey } from 'redux/receivers/selectors';\nimport { getLimit, getPage } from 'redux/query/selectors';\nimport { getDateFrom, getDateTo } from 'API/helpers';\n// import DocumentsList from 'components/DocumentsList/DocumentsList';\n// import Pagination from 'components/Pagination/Pagination';\n\nconst Incomings = () => {\n    const apiKey = useSelector(getSelectApiKey)\n    const Limit = useSelector(getLimit)\n    const Page = useSelector(getPage)\n    const body = {\n        apiKey,\n        modelName: 'InternetDocument',\n        calledMethod: \"getIncomingDocumentsByPhone\",\n        methodProperties: {\n            DateTimeFrom: getDateFrom(),\n            DateTimeTo: getDateTo(),\n            Limit,\n            Page\n        }\n    }\n    console.log(body)\n    // const { data = {} } = useGetIncomingDocumentsQuery(body)\n    \n\n    return (\n         <Container component=\"main\">\n            <h2>Вхідні посилки</h2>\n\n        </Container>\n    )\n}\n\nexport default Incomings"],"names":["createStyled","_excluded","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","name","slot","overridesResolver","props","styles","ownerState","root","capitalize","String","maxWidth","fixed","disableGutters","useThemePropsDefault","inProps","useThemePropsSystem","useUtilityClasses","componentName","classes","slots","composeClasses","generateUtilityClass","Container","options","createStyledComponent","useThemeProps","ContainerRoot","theme","_extends","width","marginLeft","boxSizing","marginRight","display","paddingLeft","spacing","paddingRight","breakpoints","up","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","value","unit","Math","max","xs","React","ref","className","component","other","_objectWithoutPropertiesLoose","_jsx","as","clsx","createContainer","styled","getLimit","state","query","limit","getPage","page","formatDate","dateString","withTime","length","date","Date","getTime","day","getDate","padStart","month","getMonth","year","getFullYear","formattedDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","getDateFrom","setMonth","setHours","toString","getDateTo","apiKey","useSelector","getSelectApiKey","Limit","Page","body","modelName","calledMethod","methodProperties","DateTimeFrom","DateTimeTo","console","log"],"sourceRoot":""}